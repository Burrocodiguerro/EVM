void pnivelgladiador(string nome){
for(uint i=0;i<gladiadores.length();i++){
string[] gla=string_split(gladiadores[i], ":", false);
if(gla[0]==nome)speak(pu.get_value("Gladiador disponível na patente")+" "+pu.get_value(gla[5])+".");
}
}
void interact2(string item){
for(uint i=0;i<gladiadores.length();i++){
string[] gla=string_split(gladiadores[i], ":", false);
if(gla[0]==item) send_reliable(0, "lutargladiador "+gla[0], 0);
}
}
void desc2(string item){
for(uint i=0;i<gladiadores.length();i++){
string[] gla=string_split(gladiadores[i], ":", false);
if(gla[0]==item) speak(pu.get_value(gla[4]));
}
}
void gladiadoresmenu()
{
speak(pu.get_value("Menu de gladiadores. Selecione um gladiador com as setas, e F1 para ajuda."));
key_hold ileft(KEY_LEFT,500,50);
key_hold iright(KEY_RIGHT,500,50);
key_hold iup(KEY_UP,500,50);
key_hold idown(KEY_DOWN,500,50);
key_hold idell(KEY_DELETE,500,50);
get_characters();
string cl;
int counter=0;
string[] peramitors=gladiadores;
string[] peramitors2;
while(true)
{
cl=get_characters();
wait(5);
mainloop();
peramitors.resize(0);
peramitors2.resize(0);
peramitors2=gladiadores;
for(uint i=0;i<peramitors2.length();i++){
string[] gla=string_split(peramitors2[i], ":", false);
peramitors.insert_last(gla[0]);
}
if(counter > peramitors.length())
{
counter=peramitors.length()-1;
}
if(cl!="" and cl!=" " and cl.length()==1 and peramitors.length()>0)
{
int f=0;
int oc=counter;
for(uint i=counter; i<peramitors.length(); i++)
{
if(i==counter)
{
continue;
}
if(peramitors[i][0]==cl)
{
counter=i;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
cl="";
f=1;
break;
}
}
if(f==0)
{
counter=0;
for(uint i=counter; i<peramitors.length(); i++)
{
if(peramitors[i][0]==cl)
{
counter=i;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
cl="";
f=1;
break;
}
}
}
if(f==0){
counter=oc;
}
}
if(key_pressed(KEY_F1))add_add_item("variado", pu.get_value("Selecione o gladiador desejado com as setas, e use uma destas opções: Enter: Inicia a luta contra o gladiador selecionado, caso esteja na patente requerida. CTRL+L: Mostra a patente necessária para lutar contra o gladiador selecionado. CTRL+b: Mostra quantos coins você tem que pagar para lutar. CTRL+ENTER: Mostra a descrição do gladiador."));
if(key_down(KEY_RCONTROL)&&key_pressed(KEY_B)||key_down(KEY_LCONTROL)&&key_pressed(KEY_B)){
for(uint i=0;i<gladiadores.length();i++){
string[] gla=string_split(gladiadores[i], ":", false);
if(gla[0]==peramitors[counter]) add_add_item("variado", pu.get_value("Você precisa de")+" "+gla[3]+" "+pu.get_value("coins para poder lutar contra esse gladiador."));
}
}
if(key_down(KEY_LCONTROL)&&key_pressed(KEY_RETURN)||key_down(KEY_RCONTROL)&&key_pressed(KEY_RETURN)&&peramitors.length()>0)desc2(peramitors[counter]);
else if(key_pressed(KEY_RETURN)&&peramitors.length()>0&&counter < peramitors.length())
{
interact2(peramitors[counter]);
}
else if(key_down(KEY_LCONTROL)&&key_pressed(KEY_L)||key_down(KEY_RCONTROL)&&key_pressed(KEY_L))pnivelgladiador(peramitors[counter]);
else if (key_down(KEY_LCONTROL) and key_pressed(KEY_C) and peramitors.length()>0 or key_down(KEY_RCONTROL) and key_pressed(KEY_C) and peramitors.length()>0)
{
clipboard_copy_text(peramitors[counter]);
speak("copied");
}
if(key_pressed(KEY_HOME) and peramitors.length()>0)
{
counter=0;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
}
if(key_pressed(KEY_END) and peramitors.length()>0)
{
counter=peramitors.length()-1;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
}
if(iup.pressing())
{
if(peramitors.length==1)
{
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
counter=0;
}
else if(counter > 0)
{
counter--;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
}
}
if(idown.pressing())
{
if(peramitors.length==1)
{
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
counter=0;
}
else if(counter < peramitors.length()-1)
{
counter++;
p.play_stationary("invclick.ogg",false);
speak(pu.get_value(peramitors[counter]));
}
}
if(key_pressed(KEY_ESCAPE))
{
return;
}
}
}
