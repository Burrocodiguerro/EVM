void call_loop(){
netloop();
omloop();
bulletloop();
wuulaloop();
wazaxloop();
cairisloop();
claudiusloop();
luciusloop();
sirixloop();
cressusloop();
duronloop();
aiellusloop();
quintosloop();
marcusloop();
barcaloop();
theokolesloop();
crixusloop();
tetraitesloop();
netloop();
omloop();
bulletloop();
priscoloop();
spiculusloop();
marcoloop();
carpoforoloop();
flammaloop();
spartacusloop();
omloop();
bulletloop();
netloop();
}
//Gladiador wuula
wuula@[] wuulas;
class wuula
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer wuulatimer, tempoatirar, tsair;
int wuulatime=370;
bool modofugir=false;
wuula(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void wuulaloop()
{
for(uint i=0; i<wuulas.length(); i++)
{
if(wuulas[i].modofugir==false&&wuulas[i].tempoatirar.elapsed>=20000){
wuulas[i].x-=2;
wuulas[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+wuulas[i].x+" "+wuulas[i].y+" "+wuulas[i].map,0);
}
if(wuulas[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==wuulas[i].map){
sair=false;
}
}
if(sair==true){
wuulas.remove_at(i);
break;
}
else{
wuulas[i].tsair.restart();
}
}
if(wuulas[i].wuulatimer.elapsed>=wuulas[i].wuulatime&&wuulas[i].modofugir==true)
{
wuulas[i].wuulatimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(wuulas[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==wuulas[i].map){
wuulas[i].x--;
string ss=get_tile_at(wuulas[i].x, wuulas[i].y, wuulas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+wuulas[i].x+" "+wuulas[i].y+" "+wuulas[i].map,0);
wuulas[i].wuulatimer.restart();
}
else if(wuulas[i].x<players[i2].x-1&&players[i2].insz==false&&wuulas[i].map==players[i2].map){
wuulas[i].x++;
string ss=get_tile_at(wuulas[i].x, wuulas[i].y, wuulas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+wuulas[i].x+" "+wuulas[i].y+" "+wuulas[i].map,0);
wuulas[i].wuulatimer.restart();
}
if(get_wuula_distance(wuulas[i], players[i2])>-1&&get_wuula_distance(wuulas[i],players[i2])<=3&&wuulas[i].tempoatirar.elapsed>=500&&wuulas[i].tiros>0&&players[i2].insz==false){
wuulas[i].tempoatirar.restart();
send_packet(0,"play "+wuulas[i].nomearma+" "+wuulas[i].x+" "+wuulas[i].y+" "+wuulas[i].map,wuulas[i].map);
players[i2].health-=random(wuulas[i].mindano, wuulas[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="wuula";
wuulas[i].tiros--;
break;
}
if(wuulas[i].tiros<=0){
wuulas[i].tiros=1;
wuulas[i].tempoatirar.restart();
}
if(wuulas[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+wuulas[i].x+" "+wuulas[i].y+" "+wuulas[i].map,wuulas[i].map);
send_reliable(0, "msganimal "+wuulas[i].golpeado+" matou_o_gladiador Wuula!", 0);
wuulas.remove_at(i);
break;
}
}
}
}
}
void spawn_wuula(int x, int y, string map){
wuula c(x, y, map);
wuulas.insert_last(c);
}
//Gladiador wazax
wazax@[] wazaxs;
class wazax
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=4000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer wazaxtimer, tempoatirar, tsair;
int wazaxtime=370;
bool modofugir=false;
wazax(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void wazaxloop()
{
for(uint i=0; i<wazaxs.length(); i++)
{
if(wazaxs[i].modofugir==false&&wazaxs[i].tempoatirar.elapsed>=20000){
wazaxs[i].x-=2;
wazaxs[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+wazaxs[i].x+" "+wazaxs[i].y+" "+wazaxs[i].map,0);
}
if(wazaxs[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==wazaxs[i].map){
sair=false;
break;
}
}
if(sair==true){
wazaxs.remove_at(i);
break;
}
else{
wazaxs[i].tsair.restart();
}
}
if(wazaxs[i].wazaxtimer.elapsed>=wazaxs[i].wazaxtime&&wazaxs[i].modofugir==true)
{
wazaxs[i].wazaxtimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(wazaxs[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==wazaxs[i].map){
wazaxs[i].x--;
string ss=get_tile_at(wazaxs[i].x, wazaxs[i].y, wazaxs[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+wazaxs[i].x+" "+wazaxs[i].y+" "+wazaxs[i].map,0);
wazaxs[i].wazaxtimer.restart();
}
else if(wazaxs[i].x<players[i2].x-1&&players[i2].insz==false&&wazaxs[i].map==players[i2].map){
wazaxs[i].x++;
string ss=get_tile_at(wazaxs[i].x, wazaxs[i].y, wazaxs[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+wazaxs[i].x+" "+wazaxs[i].y+" "+wazaxs[i].map,0);
wazaxs[i].wazaxtimer.restart();
}
if(get_wazax_distance(wazaxs[i], players[i2])>-1&&get_wazax_distance(wazaxs[i],players[i2])<=3&&wazaxs[i].tempoatirar.elapsed>=500&&wazaxs[i].tiros>0&&players[i2].insz==false){
wazaxs[i].tempoatirar.restart();
send_packet(0,"play "+wazaxs[i].nomearma+" "+wazaxs[i].x+" "+wazaxs[i].y+" "+wazaxs[i].map,wazaxs[i].map);
players[i2].health-=random(wazaxs[i].mindano, wazaxs[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="wazax";
wazaxs[i].tiros--;
break;
}
if(wazaxs[i].tiros<=0){
wazaxs[i].tiros=1;
wazaxs[i].tempoatirar.restart();
}
if(wazaxs[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+wazaxs[i].x+" "+wazaxs[i].y+" "+wazaxs[i].map,wazaxs[i].map);
send_reliable(0, "msganimal "+wazaxs[i].golpeado+" matou_o_gladiador Wuula!", 0);
wazaxs.remove_at(i);
break;
}
}
}
}
}
void spawn_wazax(int x, int y, string map){
wazax c(x, y, map);
wazaxs.insert_last(c);
}
//Gladiador cairis
cairis@[] cairiss;
class cairis
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer cairistimer, tempoatirar, tsair;
int cairistime=370;
bool modofugir=false;
cairis(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void cairisloop()
{
for(uint i=0; i<cairiss.length(); i++)
{
if(cairiss[i].modofugir==false&&cairiss[i].tempoatirar.elapsed>=20000){
cairiss[i].x-=2;
cairiss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+cairiss[i].x+" "+cairiss[i].y+" "+cairiss[i].map,0);
}
if(cairiss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==cairiss[i].map){
sair=false;
break;
}
}
if(sair==true){
cairiss.remove_at(i);
break;
}
else{
cairiss[i].tsair.restart();
}
}
if(cairiss[i].cairistimer.elapsed>=cairiss[i].cairistime&&cairiss[i].modofugir==true)
{
cairiss[i].cairistimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(cairiss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==cairiss[i].map){
cairiss[i].x--;
string ss=get_tile_at(cairiss[i].x, cairiss[i].y, cairiss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+cairiss[i].x+" "+cairiss[i].y+" "+cairiss[i].map,0);
cairiss[i].cairistimer.restart();
}
else if(cairiss[i].x<players[i2].x-1&&players[i2].insz==false&&cairiss[i].map==players[i2].map){
cairiss[i].x++;
string ss=get_tile_at(cairiss[i].x, cairiss[i].y, cairiss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+cairiss[i].x+" "+cairiss[i].y+" "+cairiss[i].map,0);
cairiss[i].cairistimer.restart();
}
if(get_cairis_distance(cairiss[i], players[i2])>-1&&get_cairis_distance(cairiss[i],players[i2])<=3&&cairiss[i].tempoatirar.elapsed>=500&&cairiss[i].tiros>0&&players[i2].insz==false){
cairiss[i].tempoatirar.restart();
send_packet(0,"play "+cairiss[i].nomearma+" "+cairiss[i].x+" "+cairiss[i].y+" "+cairiss[i].map,cairiss[i].map);
players[i2].health-=random(cairiss[i].mindano, cairiss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="cairis";
cairiss[i].tiros--;
break;
}
if(cairiss[i].tiros<=0){
cairiss[i].tiros=1;
cairiss[i].tempoatirar.restart();
}
if(cairiss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+cairiss[i].x+" "+cairiss[i].y+" "+cairiss[i].map,cairiss[i].map);
send_reliable(0, "msganimal "+cairiss[i].golpeado+" matou_o_gladiador Wuula!", 0);
cairiss.remove_at(i);
break;
}
}
}
}
}
void spawn_cairis(int x, int y, string map){
cairis c(x, y, map);
cairiss.insert_last(c);
}
//Gladiador claudius
claudius@[] claudiuss;
class claudius
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer claudiustimer, tempoatirar, tsair;
int claudiustime=370;
bool modofugir=false;
claudius(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void claudiusloop()
{
for(uint i=0; i<claudiuss.length(); i++)
{
if(claudiuss[i].modofugir==false&&claudiuss[i].tempoatirar.elapsed>=20000){
claudiuss[i].x-=2;
claudiuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+claudiuss[i].x+" "+claudiuss[i].y+" "+claudiuss[i].map,0);
}
if(claudiuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==claudiuss[i].map){
sair=false;
break;
}
}
if(sair==true){
claudiuss.remove_at(i);
break;
}
else{
claudiuss[i].tsair.restart();
}
}
if(claudiuss[i].claudiustimer.elapsed>=claudiuss[i].claudiustime&&claudiuss[i].modofugir==true)
{
claudiuss[i].claudiustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(claudiuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==claudiuss[i].map){
claudiuss[i].x--;
string ss=get_tile_at(claudiuss[i].x, claudiuss[i].y, claudiuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+claudiuss[i].x+" "+claudiuss[i].y+" "+claudiuss[i].map,0);
claudiuss[i].claudiustimer.restart();
}
else if(claudiuss[i].x<players[i2].x-1&&players[i2].insz==false&&claudiuss[i].map==players[i2].map){
claudiuss[i].x++;
string ss=get_tile_at(claudiuss[i].x, claudiuss[i].y, claudiuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+claudiuss[i].x+" "+claudiuss[i].y+" "+claudiuss[i].map,0);
claudiuss[i].claudiustimer.restart();
}
if(get_claudius_distance(claudiuss[i], players[i2])>-1&&get_claudius_distance(claudiuss[i],players[i2])<=3&&claudiuss[i].tempoatirar.elapsed>=500&&claudiuss[i].tiros>0&&players[i2].insz==false){
claudiuss[i].tempoatirar.restart();
send_packet(0,"play "+claudiuss[i].nomearma+" "+claudiuss[i].x+" "+claudiuss[i].y+" "+claudiuss[i].map,claudiuss[i].map);
players[i2].health-=random(claudiuss[i].mindano, claudiuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="claudius";
claudiuss[i].tiros--;
break;
}
if(claudiuss[i].tiros<=0){
claudiuss[i].tiros=1;
claudiuss[i].tempoatirar.restart();
}
if(claudiuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+claudiuss[i].x+" "+claudiuss[i].y+" "+claudiuss[i].map,claudiuss[i].map);
send_reliable(0, "msganimal "+claudiuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
claudiuss.remove_at(i);
break;
}
}
}
}
}
void spawn_claudius(int x, int y, string map){
claudius c(x, y, map);
claudiuss.insert_last(c);
}
//Gladiador lucius
lucius@[] luciuss;
class lucius
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer luciustimer, tempoatirar, tsair;
int luciustime=370;
bool modofugir=false;
lucius(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void luciusloop()
{
for(uint i=0; i<luciuss.length(); i++)
{
if(luciuss[i].modofugir==false&&luciuss[i].tempoatirar.elapsed>=20000){
luciuss[i].x-=2;
luciuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+luciuss[i].x+" "+luciuss[i].y+" "+luciuss[i].map,0);
}
if(luciuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==luciuss[i].map){
sair=false;
break;
}
}
if(sair==true){
luciuss.remove_at(i);
break;
}
else{
luciuss[i].tsair.restart();
}
}
if(luciuss[i].luciustimer.elapsed>=luciuss[i].luciustime&&luciuss[i].modofugir==true)
{
luciuss[i].luciustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(luciuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==luciuss[i].map){
luciuss[i].x--;
string ss=get_tile_at(luciuss[i].x, luciuss[i].y, luciuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+luciuss[i].x+" "+luciuss[i].y+" "+luciuss[i].map,0);
luciuss[i].luciustimer.restart();
}
else if(luciuss[i].x<players[i2].x-1&&players[i2].insz==false&&luciuss[i].map==players[i2].map){
luciuss[i].x++;
string ss=get_tile_at(luciuss[i].x, luciuss[i].y, luciuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+luciuss[i].x+" "+luciuss[i].y+" "+luciuss[i].map,0);
luciuss[i].luciustimer.restart();
}
if(get_lucius_distance(luciuss[i], players[i2])>-1&&get_lucius_distance(luciuss[i],players[i2])<=3&&luciuss[i].tempoatirar.elapsed>=500&&luciuss[i].tiros>0&&players[i2].insz==false){
luciuss[i].tempoatirar.restart();
send_packet(0,"play "+luciuss[i].nomearma+" "+luciuss[i].x+" "+luciuss[i].y+" "+luciuss[i].map,luciuss[i].map);
players[i2].health-=random(luciuss[i].mindano, luciuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="lucius";
luciuss[i].tiros--;
break;
}
if(luciuss[i].tiros<=0){
luciuss[i].tiros=1;
luciuss[i].tempoatirar.restart();
}
if(luciuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+luciuss[i].x+" "+luciuss[i].y+" "+luciuss[i].map,luciuss[i].map);
send_reliable(0, "msganimal "+luciuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
luciuss.remove_at(i);
break;
}
}
}
}
}
void spawn_lucius(int x, int y, string map){
lucius c(x, y, map);
luciuss.insert_last(c);
}
//Gladiador sirix
sirix@[] sirixs;
class sirix
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer sirixtimer, tempoatirar, tsair;
int sirixtime=370;
bool modofugir=false;
sirix(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void sirixloop()
{
for(uint i=0; i<sirixs.length(); i++)
{
if(sirixs[i].modofugir==false&&sirixs[i].tempoatirar.elapsed>=20000){
sirixs[i].x-=2;
sirixs[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+sirixs[i].x+" "+sirixs[i].y+" "+sirixs[i].map,0);
}
if(sirixs[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==sirixs[i].map){
sair=false;
break;
}
}
if(sair==true){
sirixs.remove_at(i);
break;
}
else{
sirixs[i].tsair.restart();
}
}
if(sirixs[i].sirixtimer.elapsed>=sirixs[i].sirixtime&&sirixs[i].modofugir==true)
{
sirixs[i].sirixtimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(sirixs[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==sirixs[i].map){
sirixs[i].x--;
string ss=get_tile_at(sirixs[i].x, sirixs[i].y, sirixs[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+sirixs[i].x+" "+sirixs[i].y+" "+sirixs[i].map,0);
sirixs[i].sirixtimer.restart();
}
else if(sirixs[i].x<players[i2].x-1&&players[i2].insz==false&&sirixs[i].map==players[i2].map){
sirixs[i].x++;
string ss=get_tile_at(sirixs[i].x, sirixs[i].y, sirixs[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+sirixs[i].x+" "+sirixs[i].y+" "+sirixs[i].map,0);
sirixs[i].sirixtimer.restart();
}
if(get_sirix_distance(sirixs[i], players[i2])>-1&&get_sirix_distance(sirixs[i],players[i2])<=3&&sirixs[i].tempoatirar.elapsed>=500&&sirixs[i].tiros>0&&players[i2].insz==false){
sirixs[i].tempoatirar.restart();
send_packet(0,"play "+sirixs[i].nomearma+" "+sirixs[i].x+" "+sirixs[i].y+" "+sirixs[i].map,sirixs[i].map);
players[i2].health-=random(sirixs[i].mindano, sirixs[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="sirix";
sirixs[i].tiros--;
break;
}
if(sirixs[i].tiros<=0){
sirixs[i].tiros=1;
sirixs[i].tempoatirar.restart();
}
if(sirixs[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+sirixs[i].x+" "+sirixs[i].y+" "+sirixs[i].map,sirixs[i].map);
send_reliable(0, "msganimal "+sirixs[i].golpeado+" matou_o_gladiador Wuula!", 0);
sirixs.remove_at(i);
break;
}
}
}
}
}
void spawn_sirix(int x, int y, string map){
sirix c(x, y, map);
sirixs.insert_last(c);
}
//Gladiador cressus
cressus@[] cressuss;
class cressus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer cressustimer, tempoatirar, tsair;
int cressustime=370;
bool modofugir=false;
cressus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void cressusloop()
{
for(uint i=0; i<cressuss.length(); i++)
{
if(cressuss[i].modofugir==false&&cressuss[i].tempoatirar.elapsed>=20000){
cressuss[i].x-=2;
cressuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+cressuss[i].x+" "+cressuss[i].y+" "+cressuss[i].map,0);
}
if(cressuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==cressuss[i].map){
sair=false;
break;
}
}
if(sair==true){
cressuss.remove_at(i);
break;
}
else{
cressuss[i].tsair.restart();
}
}
if(cressuss[i].cressustimer.elapsed>=cressuss[i].cressustime&&cressuss[i].modofugir==true)
{
cressuss[i].cressustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(cressuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==cressuss[i].map){
cressuss[i].x--;
string ss=get_tile_at(cressuss[i].x, cressuss[i].y, cressuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+cressuss[i].x+" "+cressuss[i].y+" "+cressuss[i].map,0);
cressuss[i].cressustimer.restart();
}
else if(cressuss[i].x<players[i2].x-1&&players[i2].insz==false&&cressuss[i].map==players[i2].map){
cressuss[i].x++;
string ss=get_tile_at(cressuss[i].x, cressuss[i].y, cressuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+cressuss[i].x+" "+cressuss[i].y+" "+cressuss[i].map,0);
cressuss[i].cressustimer.restart();
}
if(get_cressus_distance(cressuss[i], players[i2])>-1&&get_cressus_distance(cressuss[i],players[i2])<=3&&cressuss[i].tempoatirar.elapsed>=500&&cressuss[i].tiros>0&&players[i2].insz==false){
cressuss[i].tempoatirar.restart();
send_packet(0,"play "+cressuss[i].nomearma+" "+cressuss[i].x+" "+cressuss[i].y+" "+cressuss[i].map,cressuss[i].map);
players[i2].health-=random(cressuss[i].mindano, cressuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="cressus";
cressuss[i].tiros--;
break;
}
if(cressuss[i].tiros<=0){
cressuss[i].tiros=1;
cressuss[i].tempoatirar.restart();
}
if(cressuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+cressuss[i].x+" "+cressuss[i].y+" "+cressuss[i].map,cressuss[i].map);
send_reliable(0, "msganimal "+cressuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
cressuss.remove_at(i);
break;
}
}
}
}
}
void spawn_cressus(int x, int y, string map){
cressus c(x, y, map);
cressuss.insert_last(c);
}
//Gladiador duron
duron@[] durons;
class duron
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer durontimer, tempoatirar, tsair;
int durontime=370;
bool modofugir=false;
duron(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void duronloop()
{
for(uint i=0; i<durons.length(); i++)
{
if(durons[i].modofugir==false&&durons[i].tempoatirar.elapsed>=20000){
durons[i].x-=2;
durons[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+durons[i].x+" "+durons[i].y+" "+durons[i].map,0);
}
if(durons[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==durons[i].map){
sair=false;
break;
}
}
if(sair==true){
durons.remove_at(i);
break;
}
else{
durons[i].tsair.restart();
}
}
if(durons[i].durontimer.elapsed>=durons[i].durontime&&durons[i].modofugir==true)
{
durons[i].durontimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(durons[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==durons[i].map){
durons[i].x--;
string ss=get_tile_at(durons[i].x, durons[i].y, durons[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+durons[i].x+" "+durons[i].y+" "+durons[i].map,0);
durons[i].durontimer.restart();
}
else if(durons[i].x<players[i2].x-1&&players[i2].insz==false&&durons[i].map==players[i2].map){
durons[i].x++;
string ss=get_tile_at(durons[i].x, durons[i].y, durons[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+durons[i].x+" "+durons[i].y+" "+durons[i].map,0);
durons[i].durontimer.restart();
}
if(get_duron_distance(durons[i], players[i2])>-1&&get_duron_distance(durons[i],players[i2])<=3&&durons[i].tempoatirar.elapsed>=500&&durons[i].tiros>0&&players[i2].insz==false){
durons[i].tempoatirar.restart();
send_packet(0,"play "+durons[i].nomearma+" "+durons[i].x+" "+durons[i].y+" "+durons[i].map,durons[i].map);
players[i2].health-=random(durons[i].mindano, durons[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="duron";
durons[i].tiros--;
break;
}
if(durons[i].tiros<=0){
durons[i].tiros=1;
durons[i].tempoatirar.restart();
}
if(durons[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+durons[i].x+" "+durons[i].y+" "+durons[i].map,durons[i].map);
send_reliable(0, "msganimal "+durons[i].golpeado+" matou_o_gladiador Wuula!", 0);
durons.remove_at(i);
break;
}
}
}
}
}
void spawn_duron(int x, int y, string map){
duron c(x, y, map);
durons.insert_last(c);
}
//Gladiador aiellus
aiellus@[] aielluss;
class aiellus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer aiellustimer, tempoatirar, tsair;
int aiellustime=370;
bool modofugir=false;
aiellus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void aiellusloop()
{
for(uint i=0; i<aielluss.length(); i++)
{
if(aielluss[i].modofugir==false&&aielluss[i].tempoatirar.elapsed>=20000){
aielluss[i].x-=2;
aielluss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+aielluss[i].x+" "+aielluss[i].y+" "+aielluss[i].map,0);
}
if(aielluss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==aielluss[i].map){
sair=false;
break;
}
}
if(sair==true){
aielluss.remove_at(i);
break;
}
else{
aielluss[i].tsair.restart();
}
}
if(aielluss[i].aiellustimer.elapsed>=aielluss[i].aiellustime&&aielluss[i].modofugir==true)
{
aielluss[i].aiellustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(aielluss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==aielluss[i].map){
aielluss[i].x--;
string ss=get_tile_at(aielluss[i].x, aielluss[i].y, aielluss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+aielluss[i].x+" "+aielluss[i].y+" "+aielluss[i].map,0);
aielluss[i].aiellustimer.restart();
}
else if(aielluss[i].x<players[i2].x-1&&players[i2].insz==false&&aielluss[i].map==players[i2].map){
aielluss[i].x++;
string ss=get_tile_at(aielluss[i].x, aielluss[i].y, aielluss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+aielluss[i].x+" "+aielluss[i].y+" "+aielluss[i].map,0);
aielluss[i].aiellustimer.restart();
}
if(get_aiellus_distance(aielluss[i], players[i2])>-1&&get_aiellus_distance(aielluss[i],players[i2])<=3&&aielluss[i].tempoatirar.elapsed>=500&&aielluss[i].tiros>0&&players[i2].insz==false){
aielluss[i].tempoatirar.restart();
send_packet(0,"play "+aielluss[i].nomearma+" "+aielluss[i].x+" "+aielluss[i].y+" "+aielluss[i].map,aielluss[i].map);
players[i2].health-=random(aielluss[i].mindano, aielluss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="aiellus";
aielluss[i].tiros--;
break;
}
if(aielluss[i].tiros<=0){
aielluss[i].tiros=1;
aielluss[i].tempoatirar.restart();
}
if(aielluss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+aielluss[i].x+" "+aielluss[i].y+" "+aielluss[i].map,aielluss[i].map);
send_reliable(0, "msganimal "+aielluss[i].golpeado+" matou_o_gladiador Wuula!", 0);
aielluss.remove_at(i);
break;
}
}
}
}
}
void spawn_aiellus(int x, int y, string map){
aiellus c(x, y, map);
aielluss.insert_last(c);
}
//Gladiador quintos
quintos@[] quintoss;
class quintos
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer quintostimer, tempoatirar, tsair;
int quintostime=370;
bool modofugir=false;
quintos(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void quintosloop()
{
for(uint i=0; i<quintoss.length(); i++)
{
if(quintoss[i].modofugir==false&&quintoss[i].tempoatirar.elapsed>=20000){
quintoss[i].x-=2;
quintoss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+quintoss[i].x+" "+quintoss[i].y+" "+quintoss[i].map,0);
}
if(quintoss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==quintoss[i].map){
sair=false;
break;
}
}
if(sair==true){
quintoss.remove_at(i);
break;
}
else{
quintoss[i].tsair.restart();
}
}
if(quintoss[i].quintostimer.elapsed>=quintoss[i].quintostime&&quintoss[i].modofugir==true)
{
quintoss[i].quintostimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(quintoss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==quintoss[i].map){
quintoss[i].x--;
string ss=get_tile_at(quintoss[i].x, quintoss[i].y, quintoss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+quintoss[i].x+" "+quintoss[i].y+" "+quintoss[i].map,0);
quintoss[i].quintostimer.restart();
}
else if(quintoss[i].x<players[i2].x-1&&players[i2].insz==false&&quintoss[i].map==players[i2].map){
quintoss[i].x++;
string ss=get_tile_at(quintoss[i].x, quintoss[i].y, quintoss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+quintoss[i].x+" "+quintoss[i].y+" "+quintoss[i].map,0);
quintoss[i].quintostimer.restart();
}
if(get_quintos_distance(quintoss[i], players[i2])>-1&&get_quintos_distance(quintoss[i],players[i2])<=3&&quintoss[i].tempoatirar.elapsed>=500&&quintoss[i].tiros>0&&players[i2].insz==false){
quintoss[i].tempoatirar.restart();
send_packet(0,"play "+quintoss[i].nomearma+" "+quintoss[i].x+" "+quintoss[i].y+" "+quintoss[i].map,quintoss[i].map);
players[i2].health-=random(quintoss[i].mindano, quintoss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="quintos";
quintoss[i].tiros--;
break;
}
if(quintoss[i].tiros<=0){
quintoss[i].tiros=1;
quintoss[i].tempoatirar.restart();
}
if(quintoss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+quintoss[i].x+" "+quintoss[i].y+" "+quintoss[i].map,quintoss[i].map);
send_reliable(0, "msganimal "+quintoss[i].golpeado+" matou_o_gladiador Wuula!", 0);
quintoss.remove_at(i);
break;
}
}
}
}
}
void spawn_quintos(int x, int y, string map){
quintos c(x, y, map);
quintoss.insert_last(c);
}
//Gladiador marcus
marcus@[] marcuss;
class marcus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer marcustimer, tempoatirar, tsair;
int marcustime=370;
bool modofugir=false;
marcus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void marcusloop()
{
for(uint i=0; i<marcuss.length(); i++)
{
if(marcuss[i].modofugir==false&&marcuss[i].tempoatirar.elapsed>=20000){
marcuss[i].x-=2;
marcuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+marcuss[i].x+" "+marcuss[i].y+" "+marcuss[i].map,0);
}
if(marcuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==marcuss[i].map){
sair=false;
break;
}
}
if(sair==true){
marcuss.remove_at(i);
break;
}
else{
marcuss[i].tsair.restart();
}
}
if(marcuss[i].marcustimer.elapsed>=marcuss[i].marcustime&&marcuss[i].modofugir==true)
{
marcuss[i].marcustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(marcuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==marcuss[i].map){
marcuss[i].x--;
string ss=get_tile_at(marcuss[i].x, marcuss[i].y, marcuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+marcuss[i].x+" "+marcuss[i].y+" "+marcuss[i].map,0);
marcuss[i].marcustimer.restart();
}
else if(marcuss[i].x<players[i2].x-1&&players[i2].insz==false&&marcuss[i].map==players[i2].map){
marcuss[i].x++;
string ss=get_tile_at(marcuss[i].x, marcuss[i].y, marcuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+marcuss[i].x+" "+marcuss[i].y+" "+marcuss[i].map,0);
marcuss[i].marcustimer.restart();
}
if(get_marcus_distance(marcuss[i], players[i2])>-1&&get_marcus_distance(marcuss[i],players[i2])<=3&&marcuss[i].tempoatirar.elapsed>=500&&marcuss[i].tiros>0&&players[i2].insz==false){
marcuss[i].tempoatirar.restart();
send_packet(0,"play "+marcuss[i].nomearma+" "+marcuss[i].x+" "+marcuss[i].y+" "+marcuss[i].map,marcuss[i].map);
players[i2].health-=random(marcuss[i].mindano, marcuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="marcus";
marcuss[i].tiros--;
break;
}
if(marcuss[i].tiros<=0){
marcuss[i].tiros=1;
marcuss[i].tempoatirar.restart();
}
if(marcuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+marcuss[i].x+" "+marcuss[i].y+" "+marcuss[i].map,marcuss[i].map);
send_reliable(0, "msganimal "+marcuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
marcuss.remove_at(i);
break;
}
}
}
}
}
void spawn_marcus(int x, int y, string map){
marcus c(x, y, map);
marcuss.insert_last(c);
}
//Gladiador barca
barca@[] barcas;
class barca
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer barcatimer, tempoatirar, tsair;
int barcatime=370;
bool modofugir=false;
barca(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void barcaloop()
{
for(uint i=0; i<barcas.length(); i++)
{
if(barcas[i].modofugir==false&&barcas[i].tempoatirar.elapsed>=20000){
barcas[i].x-=2;
barcas[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+barcas[i].x+" "+barcas[i].y+" "+barcas[i].map,0);
}
if(barcas[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==barcas[i].map){
sair=false;
break;
}
}
if(sair==true){
barcas.remove_at(i);
break;
}
else{
barcas[i].tsair.restart();
}
}
if(barcas[i].barcatimer.elapsed>=barcas[i].barcatime&&barcas[i].modofugir==true)
{
barcas[i].barcatimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(barcas[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==barcas[i].map){
barcas[i].x--;
string ss=get_tile_at(barcas[i].x, barcas[i].y, barcas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+barcas[i].x+" "+barcas[i].y+" "+barcas[i].map,0);
barcas[i].barcatimer.restart();
}
else if(barcas[i].x<players[i2].x-1&&players[i2].insz==false&&barcas[i].map==players[i2].map){
barcas[i].x++;
string ss=get_tile_at(barcas[i].x, barcas[i].y, barcas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+barcas[i].x+" "+barcas[i].y+" "+barcas[i].map,0);
barcas[i].barcatimer.restart();
}
if(get_barca_distance(barcas[i], players[i2])>-1&&get_barca_distance(barcas[i],players[i2])<=3&&barcas[i].tempoatirar.elapsed>=500&&barcas[i].tiros>0&&players[i2].insz==false){
barcas[i].tempoatirar.restart();
send_packet(0,"play "+barcas[i].nomearma+" "+barcas[i].x+" "+barcas[i].y+" "+barcas[i].map,barcas[i].map);
players[i2].health-=random(barcas[i].mindano, barcas[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="barca";
barcas[i].tiros--;
break;
}
if(barcas[i].tiros<=0){
barcas[i].tiros=1;
barcas[i].tempoatirar.restart();
}
if(barcas[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+barcas[i].x+" "+barcas[i].y+" "+barcas[i].map,barcas[i].map);
send_reliable(0, "msganimal "+barcas[i].golpeado+" matou_o_gladiador Wuula!", 0);
barcas.remove_at(i);
break;
}
}
}
}
}
void spawn_barca(int x, int y, string map){
barca c(x, y, map);
barcas.insert_last(c);
}
//Gladiador theokoles
theokoles@[] theokoless;
class theokoles
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer theokolestimer, tempoatirar, tsair;
int theokolestime=370;
bool modofugir=false;
theokoles(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void theokolesloop()
{
for(uint i=0; i<theokoless.length(); i++)
{
if(theokoless[i].modofugir==false&&theokoless[i].tempoatirar.elapsed>=20000){
theokoless[i].x-=2;
theokoless[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+theokoless[i].x+" "+theokoless[i].y+" "+theokoless[i].map,0);
}
if(theokoless[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==theokoless[i].map){
sair=false;
break;
}
}
if(sair==true){
theokoless.remove_at(i);
break;
}
else{
theokoless[i].tsair.restart();
}
}
if(theokoless[i].theokolestimer.elapsed>=theokoless[i].theokolestime&&theokoless[i].modofugir==true)
{
theokoless[i].theokolestimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(theokoless[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==theokoless[i].map){
theokoless[i].x--;
string ss=get_tile_at(theokoless[i].x, theokoless[i].y, theokoless[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+theokoless[i].x+" "+theokoless[i].y+" "+theokoless[i].map,0);
theokoless[i].theokolestimer.restart();
}
else if(theokoless[i].x<players[i2].x-1&&players[i2].insz==false&&theokoless[i].map==players[i2].map){
theokoless[i].x++;
string ss=get_tile_at(theokoless[i].x, theokoless[i].y, theokoless[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+theokoless[i].x+" "+theokoless[i].y+" "+theokoless[i].map,0);
theokoless[i].theokolestimer.restart();
}
if(get_theokoles_distance(theokoless[i], players[i2])>-1&&get_theokoles_distance(theokoless[i],players[i2])<=3&&theokoless[i].tempoatirar.elapsed>=500&&theokoless[i].tiros>0&&players[i2].insz==false){
theokoless[i].tempoatirar.restart();
send_packet(0,"play "+theokoless[i].nomearma+" "+theokoless[i].x+" "+theokoless[i].y+" "+theokoless[i].map,theokoless[i].map);
players[i2].health-=random(theokoless[i].mindano, theokoless[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="theokoles";
theokoless[i].tiros--;
break;
}
if(theokoless[i].tiros<=0){
theokoless[i].tiros=1;
theokoless[i].tempoatirar.restart();
}
if(theokoless[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+theokoless[i].x+" "+theokoless[i].y+" "+theokoless[i].map,theokoless[i].map);
send_reliable(0, "msganimal "+theokoless[i].golpeado+" matou_o_gladiador Wuula!", 0);
theokoless.remove_at(i);
break;
}
}
}
}
}
void spawn_theokoles(int x, int y, string map){
theokoles c(x, y, map);
theokoless.insert_last(c);
}
//Gladiador crixus
crixus@[] crixuss;
class crixus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer crixustimer, tempoatirar, tsair;
int crixustime=370;
bool modofugir=false;
crixus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void crixusloop()
{
for(uint i=0; i<crixuss.length(); i++)
{
if(crixuss[i].modofugir==false&&crixuss[i].tempoatirar.elapsed>=20000){
crixuss[i].x-=2;
crixuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+crixuss[i].x+" "+crixuss[i].y+" "+crixuss[i].map,0);
}
if(crixuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==crixuss[i].map){
sair=false;
break;
}
}
if(sair==true){
crixuss.remove_at(i);
break;
}
else{
crixuss[i].tsair.restart();
}
}
if(crixuss[i].crixustimer.elapsed>=crixuss[i].crixustime&&crixuss[i].modofugir==true)
{
crixuss[i].crixustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(crixuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==crixuss[i].map){
crixuss[i].x--;
string ss=get_tile_at(crixuss[i].x, crixuss[i].y, crixuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+crixuss[i].x+" "+crixuss[i].y+" "+crixuss[i].map,0);
crixuss[i].crixustimer.restart();
}
else if(crixuss[i].x<players[i2].x-1&&players[i2].insz==false&&crixuss[i].map==players[i2].map){
crixuss[i].x++;
string ss=get_tile_at(crixuss[i].x, crixuss[i].y, crixuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+crixuss[i].x+" "+crixuss[i].y+" "+crixuss[i].map,0);
crixuss[i].crixustimer.restart();
}
if(get_crixus_distance(crixuss[i], players[i2])>-1&&get_crixus_distance(crixuss[i],players[i2])<=3&&crixuss[i].tempoatirar.elapsed>=500&&crixuss[i].tiros>0&&players[i2].insz==false){
crixuss[i].tempoatirar.restart();
send_packet(0,"play "+crixuss[i].nomearma+" "+crixuss[i].x+" "+crixuss[i].y+" "+crixuss[i].map,crixuss[i].map);
players[i2].health-=random(crixuss[i].mindano, crixuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="crixus";
crixuss[i].tiros--;
break;
}
if(crixuss[i].tiros<=0){
crixuss[i].tiros=1;
crixuss[i].tempoatirar.restart();
}
if(crixuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+crixuss[i].x+" "+crixuss[i].y+" "+crixuss[i].map,crixuss[i].map);
send_reliable(0, "msganimal "+crixuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
crixuss.remove_at(i);
break;
}
}
}
}
}
void spawn_crixus(int x, int y, string map){
crixus c(x, y, map);
crixuss.insert_last(c);
}
//Gladiador tetraites
tetraites@[] tetraitess;
class tetraites
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer tetraitestimer, tempoatirar, tsair;
int tetraitestime=370;
bool modofugir=false;
tetraites(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void tetraitesloop()
{
for(uint i=0; i<tetraitess.length(); i++)
{
if(tetraitess[i].modofugir==false&&tetraitess[i].tempoatirar.elapsed>=20000){
tetraitess[i].x-=2;
tetraitess[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+tetraitess[i].x+" "+tetraitess[i].y+" "+tetraitess[i].map,0);
}
if(tetraitess[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==tetraitess[i].map){
sair=false;
break;
}
}
if(sair==true){
tetraitess.remove_at(i);
break;
}
else{
tetraitess[i].tsair.restart();
}
}
if(tetraitess[i].tetraitestimer.elapsed>=tetraitess[i].tetraitestime&&tetraitess[i].modofugir==true)
{
tetraitess[i].tetraitestimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(tetraitess[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==tetraitess[i].map){
tetraitess[i].x--;
string ss=get_tile_at(tetraitess[i].x, tetraitess[i].y, tetraitess[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+tetraitess[i].x+" "+tetraitess[i].y+" "+tetraitess[i].map,0);
tetraitess[i].tetraitestimer.restart();
}
else if(tetraitess[i].x<players[i2].x-1&&players[i2].insz==false&&tetraitess[i].map==players[i2].map){
tetraitess[i].x++;
string ss=get_tile_at(tetraitess[i].x, tetraitess[i].y, tetraitess[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+tetraitess[i].x+" "+tetraitess[i].y+" "+tetraitess[i].map,0);
tetraitess[i].tetraitestimer.restart();
}
if(get_tetraites_distance(tetraitess[i], players[i2])>-1&&get_tetraites_distance(tetraitess[i],players[i2])<=3&&tetraitess[i].tempoatirar.elapsed>=500&&tetraitess[i].tiros>0&&players[i2].insz==false){
tetraitess[i].tempoatirar.restart();
send_packet(0,"play "+tetraitess[i].nomearma+" "+tetraitess[i].x+" "+tetraitess[i].y+" "+tetraitess[i].map,tetraitess[i].map);
players[i2].health-=random(tetraitess[i].mindano, tetraitess[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="tetraites";
tetraitess[i].tiros--;
break;
}
if(tetraitess[i].tiros<=0){
tetraitess[i].tiros=1;
tetraitess[i].tempoatirar.restart();
}
if(tetraitess[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+tetraitess[i].x+" "+tetraitess[i].y+" "+tetraitess[i].map,tetraitess[i].map);
send_reliable(0, "msganimal "+tetraitess[i].golpeado+" matou_o_gladiador Wuula!", 0);
tetraitess.remove_at(i);
break;
}
}
}
}
}
void spawn_tetraites(int x, int y, string map){
tetraites c(x, y, map);
tetraitess.insert_last(c);
}
//Gladiador prisco
prisco@[] priscos;
class prisco
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer priscotimer, tempoatirar, tsair;
int priscotime=370;
bool modofugir=false;
prisco(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void priscoloop()
{
for(uint i=0; i<priscos.length(); i++)
{
if(priscos[i].modofugir==false&&priscos[i].tempoatirar.elapsed>=20000){
priscos[i].x-=2;
priscos[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+priscos[i].x+" "+priscos[i].y+" "+priscos[i].map,0);
}
if(priscos[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==priscos[i].map){
sair=false;
break;
}
}
if(sair==true){
priscos.remove_at(i);
break;
}
else{
priscos[i].tsair.restart();
}
}
if(priscos[i].priscotimer.elapsed>=priscos[i].priscotime&&priscos[i].modofugir==true)
{
priscos[i].priscotimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(priscos[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==priscos[i].map){
priscos[i].x--;
string ss=get_tile_at(priscos[i].x, priscos[i].y, priscos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+priscos[i].x+" "+priscos[i].y+" "+priscos[i].map,0);
priscos[i].priscotimer.restart();
}
else if(priscos[i].x<players[i2].x-1&&players[i2].insz==false&&priscos[i].map==players[i2].map){
priscos[i].x++;
string ss=get_tile_at(priscos[i].x, priscos[i].y, priscos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+priscos[i].x+" "+priscos[i].y+" "+priscos[i].map,0);
priscos[i].priscotimer.restart();
}
if(get_prisco_distance(priscos[i], players[i2])>-1&&get_prisco_distance(priscos[i],players[i2])<=3&&priscos[i].tempoatirar.elapsed>=500&&priscos[i].tiros>0&&players[i2].insz==false){
priscos[i].tempoatirar.restart();
send_packet(0,"play "+priscos[i].nomearma+" "+priscos[i].x+" "+priscos[i].y+" "+priscos[i].map,priscos[i].map);
players[i2].health-=random(priscos[i].mindano, priscos[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="prisco";
priscos[i].tiros--;
break;
}
if(priscos[i].tiros<=0){
priscos[i].tiros=1;
priscos[i].tempoatirar.restart();
}
if(priscos[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+priscos[i].x+" "+priscos[i].y+" "+priscos[i].map,priscos[i].map);
send_reliable(0, "msganimal "+priscos[i].golpeado+" matou_o_gladiador Wuula!", 0);
priscos.remove_at(i);
break;
}
}
}
}
}
void spawn_prisco(int x, int y, string map){
prisco c(x, y, map);
priscos.insert_last(c);
}
//Gladiador spiculus
spiculus@[] spiculuss;
class spiculus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer spiculustimer, tempoatirar, tsair;
int spiculustime=370;
bool modofugir=false;
spiculus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void spiculusloop()
{
for(uint i=0; i<spiculuss.length(); i++)
{
if(spiculuss[i].modofugir==false&&spiculuss[i].tempoatirar.elapsed>=20000){
spiculuss[i].x-=2;
spiculuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+spiculuss[i].x+" "+spiculuss[i].y+" "+spiculuss[i].map,0);
}
if(spiculuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==spiculuss[i].map){
sair=false;
break;
}
}
if(sair==true){
spiculuss.remove_at(i);
break;
}
else{
spiculuss[i].tsair.restart();
}
}
if(spiculuss[i].spiculustimer.elapsed>=spiculuss[i].spiculustime&&spiculuss[i].modofugir==true)
{
spiculuss[i].spiculustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(spiculuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==spiculuss[i].map){
spiculuss[i].x--;
string ss=get_tile_at(spiculuss[i].x, spiculuss[i].y, spiculuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+spiculuss[i].x+" "+spiculuss[i].y+" "+spiculuss[i].map,0);
spiculuss[i].spiculustimer.restart();
}
else if(spiculuss[i].x<players[i2].x-1&&players[i2].insz==false&&spiculuss[i].map==players[i2].map){
spiculuss[i].x++;
string ss=get_tile_at(spiculuss[i].x, spiculuss[i].y, spiculuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+spiculuss[i].x+" "+spiculuss[i].y+" "+spiculuss[i].map,0);
spiculuss[i].spiculustimer.restart();
}
if(get_spiculus_distance(spiculuss[i], players[i2])>-1&&get_spiculus_distance(spiculuss[i],players[i2])<=3&&spiculuss[i].tempoatirar.elapsed>=500&&spiculuss[i].tiros>0&&players[i2].insz==false){
spiculuss[i].tempoatirar.restart();
send_packet(0,"play "+spiculuss[i].nomearma+" "+spiculuss[i].x+" "+spiculuss[i].y+" "+spiculuss[i].map,spiculuss[i].map);
players[i2].health-=random(spiculuss[i].mindano, spiculuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="spiculus";
spiculuss[i].tiros--;
break;
}
if(spiculuss[i].tiros<=0){
spiculuss[i].tiros=1;
spiculuss[i].tempoatirar.restart();
}
if(spiculuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+spiculuss[i].x+" "+spiculuss[i].y+" "+spiculuss[i].map,spiculuss[i].map);
send_reliable(0, "msganimal "+spiculuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
spiculuss.remove_at(i);
break;
}
}
}
}
}
void spawn_spiculus(int x, int y, string map){
spiculus c(x, y, map);
spiculuss.insert_last(c);
}
//Gladiador marco
marco@[] marcos;
class marco
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer marcotimer, tempoatirar, tsair;
int marcotime=370;
bool modofugir=false;
marco(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void marcoloop()
{
for(uint i=0; i<marcos.length(); i++)
{
if(marcos[i].modofugir==false&&marcos[i].tempoatirar.elapsed>=20000){
marcos[i].x-=2;
marcos[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+marcos[i].x+" "+marcos[i].y+" "+marcos[i].map,0);
}
if(marcos[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==marcos[i].map){
sair=false;
break;
}
}
if(sair==true){
marcos.remove_at(i);
break;
}
else{
marcos[i].tsair.restart();
}
}
if(marcos[i].marcotimer.elapsed>=marcos[i].marcotime&&marcos[i].modofugir==true)
{
marcos[i].marcotimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(marcos[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==marcos[i].map){
marcos[i].x--;
string ss=get_tile_at(marcos[i].x, marcos[i].y, marcos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+marcos[i].x+" "+marcos[i].y+" "+marcos[i].map,0);
marcos[i].marcotimer.restart();
}
else if(marcos[i].x<players[i2].x-1&&players[i2].insz==false&&marcos[i].map==players[i2].map){
marcos[i].x++;
string ss=get_tile_at(marcos[i].x, marcos[i].y, marcos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+marcos[i].x+" "+marcos[i].y+" "+marcos[i].map,0);
marcos[i].marcotimer.restart();
}
if(get_marco_distance(marcos[i], players[i2])>-1&&get_marco_distance(marcos[i],players[i2])<=3&&marcos[i].tempoatirar.elapsed>=500&&marcos[i].tiros>0&&players[i2].insz==false){
marcos[i].tempoatirar.restart();
send_packet(0,"play "+marcos[i].nomearma+" "+marcos[i].x+" "+marcos[i].y+" "+marcos[i].map,marcos[i].map);
players[i2].health-=random(marcos[i].mindano, marcos[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="marco";
marcos[i].tiros--;
break;
}
if(marcos[i].tiros<=0){
marcos[i].tiros=1;
marcos[i].tempoatirar.restart();
}
if(marcos[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+marcos[i].x+" "+marcos[i].y+" "+marcos[i].map,marcos[i].map);
send_reliable(0, "msganimal "+marcos[i].golpeado+" matou_o_gladiador Wuula!", 0);
marcos.remove_at(i);
break;
}
}
}
}
}
void spawn_marco(int x, int y, string map){
marco c(x, y, map);
marcos.insert_last(c);
}
//Gladiador carpoforo
carpoforo@[] carpoforos;
class carpoforo
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer carpoforotimer, tempoatirar, tsair;
int carpoforotime=370;
bool modofugir=false;
carpoforo(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void carpoforoloop()
{
for(uint i=0; i<carpoforos.length(); i++)
{
if(carpoforos[i].modofugir==false&&carpoforos[i].tempoatirar.elapsed>=20000){
carpoforos[i].x-=2;
carpoforos[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+carpoforos[i].x+" "+carpoforos[i].y+" "+carpoforos[i].map,0);
}
if(carpoforos[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==carpoforos[i].map){
sair=false;
break;
}
}
if(sair==true){
carpoforos.remove_at(i);
break;
}
else{
carpoforos[i].tsair.restart();
}
}
if(carpoforos[i].carpoforotimer.elapsed>=carpoforos[i].carpoforotime&&carpoforos[i].modofugir==true)
{
carpoforos[i].carpoforotimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(carpoforos[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==carpoforos[i].map){
carpoforos[i].x--;
string ss=get_tile_at(carpoforos[i].x, carpoforos[i].y, carpoforos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+carpoforos[i].x+" "+carpoforos[i].y+" "+carpoforos[i].map,0);
carpoforos[i].carpoforotimer.restart();
}
else if(carpoforos[i].x<players[i2].x-1&&players[i2].insz==false&&carpoforos[i].map==players[i2].map){
carpoforos[i].x++;
string ss=get_tile_at(carpoforos[i].x, carpoforos[i].y, carpoforos[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+carpoforos[i].x+" "+carpoforos[i].y+" "+carpoforos[i].map,0);
carpoforos[i].carpoforotimer.restart();
}
if(get_carpoforo_distance(carpoforos[i], players[i2])>-1&&get_carpoforo_distance(carpoforos[i],players[i2])<=3&&carpoforos[i].tempoatirar.elapsed>=500&&carpoforos[i].tiros>0&&players[i2].insz==false){
carpoforos[i].tempoatirar.restart();
send_packet(0,"play "+carpoforos[i].nomearma+" "+carpoforos[i].x+" "+carpoforos[i].y+" "+carpoforos[i].map,carpoforos[i].map);
players[i2].health-=random(carpoforos[i].mindano, carpoforos[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="carpoforo";
carpoforos[i].tiros--;
break;
}
if(carpoforos[i].tiros<=0){
carpoforos[i].tiros=1;
carpoforos[i].tempoatirar.restart();
}
if(carpoforos[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+carpoforos[i].x+" "+carpoforos[i].y+" "+carpoforos[i].map,carpoforos[i].map);
send_reliable(0, "msganimal "+carpoforos[i].golpeado+" matou_o_gladiador Wuula!", 0);
carpoforos.remove_at(i);
break;
}
}
}
}
}
void spawn_carpoforo(int x, int y, string map){
carpoforo c(x, y, map);
carpoforos.insert_last(c);
}
//Gladiador flamma
flamma@[] flammas;
class flamma
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer flammatimer, tempoatirar, tsair;
int flammatime=370;
bool modofugir=false;
flamma(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void flammaloop()
{
for(uint i=0; i<flammas.length(); i++)
{
if(flammas[i].modofugir==false&&flammas[i].tempoatirar.elapsed>=20000){
flammas[i].x-=2;
flammas[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+flammas[i].x+" "+flammas[i].y+" "+flammas[i].map,0);
}
if(flammas[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==flammas[i].map){
sair=false;
break;
}
}
if(sair==true){
flammas.remove_at(i);
break;
}
else{
flammas[i].tsair.restart();
}
}
if(flammas[i].flammatimer.elapsed>=flammas[i].flammatime&&flammas[i].modofugir==true)
{
flammas[i].flammatimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(flammas[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==flammas[i].map){
flammas[i].x--;
string ss=get_tile_at(flammas[i].x, flammas[i].y, flammas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+flammas[i].x+" "+flammas[i].y+" "+flammas[i].map,0);
flammas[i].flammatimer.restart();
}
else if(flammas[i].x<players[i2].x-1&&players[i2].insz==false&&flammas[i].map==players[i2].map){
flammas[i].x++;
string ss=get_tile_at(flammas[i].x, flammas[i].y, flammas[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+flammas[i].x+" "+flammas[i].y+" "+flammas[i].map,0);
flammas[i].flammatimer.restart();
}
if(get_flamma_distance(flammas[i], players[i2])>-1&&get_flamma_distance(flammas[i],players[i2])<=3&&flammas[i].tempoatirar.elapsed>=500&&flammas[i].tiros>0&&players[i2].insz==false){
flammas[i].tempoatirar.restart();
send_packet(0,"play "+flammas[i].nomearma+" "+flammas[i].x+" "+flammas[i].y+" "+flammas[i].map,flammas[i].map);
players[i2].health-=random(flammas[i].mindano, flammas[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="flamma";
flammas[i].tiros--;
break;
}
if(flammas[i].tiros<=0){
flammas[i].tiros=1;
flammas[i].tempoatirar.restart();
}
if(flammas[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+flammas[i].x+" "+flammas[i].y+" "+flammas[i].map,flammas[i].map);
send_reliable(0, "msganimal "+flammas[i].golpeado+" matou_o_gladiador Wuula!", 0);
flammas.remove_at(i);
break;
}
}
}
}
}
void spawn_flamma(int x, int y, string map){
flamma c(x, y, map);
flammas.insert_last(c);
}
//Gladiador spartacus
spartacus@[] spartacuss;
class spartacus
{
int x, y;
int mindano=50;
int maxdano=100;
uint tiros=1;
int vida=3000;
string golpeado, map;
string nomearma="espadahit.ogg";
timer spartacustimer, tempoatirar, tsair;
int spartacustime=370;
bool modofugir=false;
spartacus(int cx, int cy, string cmap)
{
x=cx;
y=cy;
map=cmap;
}
}
void spartacusloop()
{
for(uint i=0; i<spartacuss.length(); i++)
{
if(spartacuss[i].modofugir==false&&spartacuss[i].tempoatirar.elapsed>=20000){
spartacuss[i].x-=2;
spartacuss[i].modofugir=true;
send_reliable(0,"play espadadraw.ogg "+spartacuss[i].x+" "+spartacuss[i].y+" "+spartacuss[i].map,0);
}
if(spartacuss[i].tsair.elapsed>=10000){
bool sair=true;
for(uint iz=0; iz<players.length(); iz++){
if(players[iz].map==spartacuss[i].map){
sair=false;
break;
}
}
if(sair==true){
spartacuss.remove_at(i);
break;
}
else{
spartacuss[i].tsair.restart();
}
}
if(spartacuss[i].spartacustimer.elapsed>=spartacuss[i].spartacustime&&spartacuss[i].modofugir==true)
{
spartacuss[i].spartacustimer.restart();
for(uint i2=0; i2 < players.length(); i2++){
if(spartacuss[i].x>players[i2].x+1&&players[i2].insz==false&&players[i2].map==spartacuss[i].map){
spartacuss[i].x--;
string ss=get_tile_at(spartacuss[i].x, spartacuss[i].y, spartacuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+spartacuss[i].x+" "+spartacuss[i].y+" "+spartacuss[i].map,0);
spartacuss[i].spartacustimer.restart();
}
else if(spartacuss[i].x<players[i2].x-1&&players[i2].insz==false&&spartacuss[i].map==players[i2].map){
spartacuss[i].x++;
string ss=get_tile_at(spartacuss[i].x, spartacuss[i].y, spartacuss[i].map);
send_reliable(0,"play "+ss+"step"+random(1, 5)+".ogg "+spartacuss[i].x+" "+spartacuss[i].y+" "+spartacuss[i].map,0);
spartacuss[i].spartacustimer.restart();
}
if(get_spartacus_distance(spartacuss[i], players[i2])>-1&&get_spartacus_distance(spartacuss[i],players[i2])<=3&&spartacuss[i].tempoatirar.elapsed>=500&&spartacuss[i].tiros>0&&players[i2].insz==false){
spartacuss[i].tempoatirar.restart();
send_packet(0,"play "+spartacuss[i].nomearma+" "+spartacuss[i].x+" "+spartacuss[i].y+" "+spartacuss[i].map,spartacuss[i].map);
players[i2].health-=random(spartacuss[i].mindano, spartacuss[i].maxdano);
send_reliable(0,"inithurt "+players[i2].charname+" "+players[i2].x+" "+players[i2].y+" "+players[i2].voice+" "+players[i2].pitch+" "+players[i2].map,0);
players[i2].lasthit="spartacus";
spartacuss[i].tiros--;
break;
}
if(spartacuss[i].tiros<=0){
spartacuss[i].tiros=1;
spartacuss[i].tempoatirar.restart();
}
if(spartacuss[i].vida<=0){
send_packet(0,"play corpo_caindo.ogg "+spartacuss[i].x+" "+spartacuss[i].y+" "+spartacuss[i].map,spartacuss[i].map);
send_reliable(0, "msganimal "+spartacuss[i].golpeado+" matou_o_gladiador Wuula!", 0);
spartacuss.remove_at(i);
break;
}
}
}
}
}
void spawn_spartacus(int x, int y, string map){
spartacus c(x, y, map);
spartacuss.insert_last(c);
}
double get_wuula_distance(wuula@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_wazax_distance(wazax@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_cairis_distance(cairis@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_claudius_distance(claudius@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_lucius_distance(lucius@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_sirix_distance(sirix@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_cressus_distance(cressus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_duron_distance(duron@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_aiellus_distance(aiellus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_quintos_distance(quintos@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_marcus_distance(marcus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_barca_distance(barca@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_theokoles_distance(theokoles@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_crixus_distance(crixus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_tetraites_distance(tetraites@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_prisco_distance(prisco@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_spiculus_distance(spiculus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_marco_distance(marco@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_carpoforo_distance(carpoforo@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_flamma_distance(flamma@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
double get_spartacus_distance(spartacus@ m1, player@ p2)
{
if(m1.map!=p2.map) return -1;
int dx,dy;
if(m1.x<=p2.x) dx=p2.x-m1.x;
else dx=m1.x-p2.x;
if(m1.y<=p2.y) dy=p2.y-m1.y;
else dy=m1.y-p2.y;
return dx+dy;
}
